# https://www.acmicpc.net/problem/1018
# 문제71018번.체스판 다시 칠하기
# 시간: 2초, 메모리: 128MB



# 입력
'''
1. 보드 세로 크기 N과 가로 크기 M
- 8 <= N, M <= 50
2. N개의 줄에는 보드의 각 행의 상태
- B는 검은색, W는 흰색
'''



# 출력
'''
1. 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력
- M x N 크기의 보드를 잘라서 8 x 8 크기의 체스판으로 만들려고 함
- 체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 하므로, 8 x 8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야 함
'''



# 코드

# 접근방법
'''
<8 x 8 크기 체스판의 시작점 구하는 법> 
행 8, 열 8 크기의 체스판을 만들어야하므로,  
행 N, 열 M 크기의 보드판에서 
행 시작점(제한선)은 0 ~ (N - 8)까지 가능
열 시작점(제한선)은 0 ~ (M - 8)까지 가능

<8 x 8 크기의 체스판>
- 첫번째 정사각형이 W인 경우, 짝수번째는 모두 W, 홀수번째는 모두 B이어야 함
- 첫번째 정사각형이 B인 경우, 짝수번째는 모두 B, 홀수번째는 모두 W이어야 함
- 즉, 짝수번째 정사각형은 모두 첫번째 정사각형 색깔과 같아야 하고, 홀수번째 정사각형은 첫번째 정사각형 색깔과 달라야 함

<체스판에서 다시 칠해야하는 정사각형 개수 구하는 법>
- 첫번째 정사각형이 W일 때 칠해야하는 정사각형 개수가 더 적을지, 첫번째 정사각형이 B일 때 칠해야하는 정사각형 개수가 더 적은지 알아야 함
1. 첫번째 정사각형이 W일 때를 가정한 경우, 
칠해야하는 정사각형 개수(X) = '짝수번째 정사각형에서의 B 개수' + '홀수번째 정사각형에서의 W 개수'
2. 첫번째 정사각형이 B일 때를 가정한 경우 
칠해야하는 정사각형 개수(Y) = '짝수번째 정사각형에서의 W 개수' + '홀수번째 정사각형에서의 B 개수'
- X와 Y 중 더 작은 값에 해당하는 것을 선택하면 됨

<각 정사각형이 홀수번째인지 짝수번째인지 아는 법>
- (행 + 열) == 짝수이면, 짝수번째 칸
- (행 + 열) == 홀수이면, 홀수번째 칸

         c  
         0   1   2   3
         -------------     
    r 0 |0   1   2   3
      1 |1   2   3   4  
      2 |2   3   4   5
      3 |3   4   5   6
              ⇓
         c  
         0   1   2   3
         -------------     
    r 0 |짝  홀  짝  홀
      1 |홀  짝  홀  짝  
      2 |짝  홀  짝  홀
      3 |홀  짝  홀  짝
'''
import sys

sys.stdin = open('input_text/1018.txt')

N, M = map(int, input().split())   # 행, 열
board = [input() for _ in range(N)]

# 체스판에서 칠해야하는 정사각형 개수 구하기
def color_chessboard(board, start):
    start_r, start_c = start
    even = {'W': 0, 'B': 0}  # 짝수번째 정사각형의 W, B 각 개수
    odd = {'W': 0, 'B': 0}   # 홀수번째 정사각형의 W, B 각 개수
    for r in range(start_r, start_r + 8):
        for c in range(start_c, start_c + 8):
            if (r + c) % 2 == 0:
                even[board[r][c]] += 1
            if (r + c) % 2 == 1:
                odd[board[r][c]] += 1
    
    return min(even['B'] + odd['W'], even['W'] + odd['B'])


# 보드판을 8 x 8 크기의 체스판으로 자르기
min_cnt = 8 * 8   # 칠해야하는 정사각형 개수 최소값
for start_r in range(0, N - 8 + 1):
    for start_c in range(0, M - 8 + 1):
        cnt = color_chessboard(board, (start_r, start_c))
        min_cnt = min(min_cnt, cnt)

print(min_cnt)


# 실행 결과: 성공(메모리:31256kb, 시간:68ms)