# https://school.programmers.co.kr/learn/courses/30/lessons/12914
# 코딩테스트연습 < 연습문제 < 문제.멀리 뛰기

# 입력
'''
1. 멀리뛰기에 사용될 칸의 수 n
- 1 <= n <= 2,000
- 효진이는 한번에 1칸, 또는 2칸을 뛸 수 있음
'''



# 출력
'''
1. 효진이가 끝에 도달하는 방법이 몇 가지인지 알아내, 여기에 1234567를 나눈 나머지를 리턴
'''


# 코드 1

# 접근방법
'''
n = 3 일 경우
1. (첫번째) 3 = 2 x 1 + 1 x 1
⇒ 두자리 수 중 2가 한자리에 위치하는 경우의 수 = 2C1 = 2
2. (두번째) 3 = 2 x 0 + 1 x 3 
⇒ 세자리 수 중 2가 아무자리 수에도 위치하지 않는 경우의 수 = 3C0 = 1
-----------------------------------------------------------
n = 6 일 경우
1. (첫번째) 6 = 2 x 3 
⇒ 세자리 수 중 2가 세자리에 위치하는 경우의 수 = 3C3 = 1
2. (두번째) 6 = 2 x 2 + 1 x 2 
⇒ 네자리 수 중 2가 두자리에 위치하는 경우의 수 = 4C2 = 6
3. (세번째) 6 = 2 x 1 + 1 x 4
⇒ 다섯자리 수 중 2가 한자리에 위치하는 경우의 수 = 5C1 = 5
4. (네번째) 6 = 2 x 0 + 1 x 6 
⇒ 여섯자리 수 중 2가 아무자리 수에도 위치하지 않는 경우의 수 = 6C0 = 1
'''

import sys

sys.stdin = open('input_text/멀리뛰기.txt')

def solution(n):
    def combination(n, x) -> int:
        rst = 1
        for num in range(n, n - x, -1):  # 분자
            rst *= num
        for num in range(x, 0, -1):  # 분모
            rst //= num
        return rst

    tot_case = 0   # 총 경우의 수
    for cnt_2 in range(n // 2 + 1):  
        cnt_1 = n - 2 * cnt_2
        tot_case += combination(cnt_1 + cnt_2, cnt_2)
    return tot_case % 1234567


# 실행 결과: 성공



# 코드 2

# 접근방법
'''
n = 1 일 경우, 1C0 = 1
-----------------------------------------------------------
n = 2 일 경우, 1C1 + 2C0 = 1 + 1 = 2
-----------------------------------------------------------
n = 3 일 경우, 2C1 + 3C0 = 2 + 1 = 3
-----------------------------------------------------------
n = 4 일 경우, 2C2 + 3C1 + 4C0 = 1 + 3 + 1 = 5
-----------------------------------------------------------
n = 5 일 경우, 3C2 + 4C1 + 5C0 = 3 + 4 + 1 = 8
-----------------------------------------------------------
n = 6 일 경우, 3C3 + 4C2 + 5C1 + 6C0 = 1 + 6 + 5 + 1 = 13 
-----------------------------------------------------------
=> 1 2 3 5 8 13 ... 피보나치 수열을 만족!
'''

import sys

sys.stdin = open('input_text/멀리뛰기.txt')

def solution(n):
    if n == 1:
        return 1
    if n == 2:
        return 2
    return (solution(n - 1) + solution(n - 2)) % 1234567


# 실행 결과: 부분 성공(시간 초과)



# 코드 3

# 접근방법
'''
=> 1 2 3 5 8 13 ... 피보나치 수열을 만족!
'''

import sys

sys.stdin = open('input_text/멀리뛰기.txt')

def solution(n):
    if n == 1:
        return 1

    a, b = 1, 2
    for _ in range(2, n):
        a, b = b, a + b
    return b % 1234567


# 실행 결과: 성공